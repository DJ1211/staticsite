from htmlnode import HTMLNode, ParentNode, LeafNode


block_type_paragraph = "paragraph"
block_type_heading = "heading"
block_type_code = "code"
block_type_quote = "quote"
block_type_unordered_list = "unordered_list"
block_type_ordered_list = "ordered_list"


def markdown_to_blocks(markdown):
    split_markdown = markdown.split("\n\n")
    split_markdown = list(filter(None, split_markdown)) #Removes empty string (generated by even number of abundant new lines)
    blocks = list(map(str.strip, split_markdown)) #Removes trailing white space and strings that contain only \n (generated by odd number of abundant new lines)
    return blocks

def block_to_block_type(block):

    #Heading
    if block.startswith(("# ", "## ", "### ", "#### ", "##### ", "###### ")):
        heading_text = block.split(" ", 1)
        if len(heading_text) > 1 and heading_text[1].strip():
            return block_type_heading
        else:
            return block_type_paragraph
   
    # Code
    elif block[:3] == "```":
        if block[-3:] == "```":
            return block_type_code
        else:
            return block_type_paragraph
        
    # Quote
    elif block[0] == ">":
        is_quote = True
        lines = str.splitlines(block)
        for line in lines:
            if line[0] != ">":
                is_quote = False
        if is_quote == True:
            return block_type_quote
        else:
            return block_type_paragraph
    
    # Unordered Lists
    elif block[:2] == "* " or block[:2] == "- ":
        is_unordered_list = True
        lines = str.splitlines(block)
        for line in lines:
            if line[:2] != "* " and line[:2] != "- ":
                is_unordered_list = False
        if is_unordered_list == True:
            return block_type_unordered_list
        else:
            return block_type_paragraph
        
    # Ordered Lists
    elif block[:3] == "1. ":
        is_ordered_list = True
        count = 1
        lines = str.splitlines(block)
        for line in lines:
            if int(line[0]) == count and line[1] == "." and line[2] == " ":
                count += 1
            else:
                is_ordered_list = False
        if is_ordered_list == True:
            return block_type_ordered_list
        else:
            return block_type_paragraph

    else:
        return block_type_paragraph

def markdown_to_html_node(markdown):
    markdown_blocks = markdown_to_blocks(markdown)
    for block in markdown_blocks:
        block_type = block_to_block_type(block)
        if block_type == "heading":
            print(True)
        else:
            print(False)




markdown = ("""# Heading 1\n\nParagraph 1\n\n```\nCode\n```\n\n> Quote 1\n>> Quote 2\n\n* Unordered List 1\n- Unordered List 2""")
markdown_to_html_node(markdown)